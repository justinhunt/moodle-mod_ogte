<div>
    <span class="ogte-panel-instructions">{{#str}}articlegenerator_instructions, mod_ogte{{/str}}</span><br/>
    <input type="text" id="{{uniqid}}_ag_prompt" class="ogte-wide" placeholder="{{#str}}article-topic-here, mod_ogte{{/str}}"></textarea>
    <div id="{{uniqid}}_ag_message" class="ogte-wide" style="text-align: center"></div>
    <button id="{{uniqid}}_ag_button" type="button" class="ogte-wide">{{#str}}generate-article, mod_ogte{{/str}}</button>
    <div><textarea id="the_ag_article" class="ogte-wide" style="overflow: auto; resize: auto; height: 150px; display: none"></textarea><br></div>
    <div id="{{uniqid}}_ag_articlestats" style="display: none" class="mod-ogte-stats ogte-wide"></div>

    <!-- actions -->
    <div id="ogte_generator_actions" class="mod-ogte-passage-opts" style="display: none">
        <form id="postToEditorForm" action="{{{addnewurl}}}" method="post" style="display: none;">
            <input id="postToEditorText" type="hidden" name="text" value=""/>
        </form>
        <button type="button" class="btn btn-primary ogte-usegeneratedtext-button" id="ogte-usegeneratedtext-button">
                <div>Use the text</div>
        </button>
    </div>


</div>
<!-- @@CLOUDPOODLLTOKEN@@ -->
{{^element.frozen}}
    {{#js}}
        // <script>
            require(['jquery','core/templates','core/notification','mod_ogte/utils'], function($,templates,notification, utils) {

                var promptbox= $('#{{uniqid}}_ag_prompt');
                var articlebox= $('#the_ag_article');
                var articlestats= $('#{{uniqid}}_ag_articlestats');
                var articleactions= $('#ogte_generator_actions');
                var themessage= $('#{{uniqid}}_ag_message');

                utils.setCloudPoodllToken('{{cloudpoodlltoken}}');

                //generate the text on button click
                $('#{{uniqid}}_ag_button').on('click',function(){
                    //show a spinner
                    themessage.html('<i class="fa fa-spinner fa-spin fa-sm"></i>');


                    var theprompt = promptbox.val();
                    //no super long readings or empty ones
                    if(!theprompt || theprompt.trim()==='') {
                        themessage.text('{{#str}}entersomething, mod_ogte{{/str}}');
                        return;
                    }
                    if(theprompt.length > 200){
                        themessage.text('{{#str}}text-too-long-200, mod_ogte{{/str}}');
                        return;
                    }
                    var language = 'en-US';
                    utils.call_ai(theprompt,language,'','generate_article',function(thearticle){
                        themessage.text('');
                        articlebox.val(thearticle);
                        articlebox.show();
                        articleactions.show();

                        var textStatsData = utils.analyzeText(thearticle);
                        templates.render('mod_ogte/textstatstable', textStatsData).done(function(html, js) {
                            articlestats.fadeOut("fast", function() {
                                templates.replaceNodeContents(articlestats, html, js);
                                articlestats.fadeIn("fast");
                            }.bind(this));

                        }.bind(this)).fail(notification.exception);

                    });
                });

                //submit article to the level editor on click of the button
                $('#ogte-usegeneratedtext-button').on('click',function(){
                    $('#postToEditorText').val(articlebox.val());
                    $('#postToEditorForm').submit();
                });
            });
    {{/js}}
{{/element.frozen}}
