{"version":3,"file":"articleleveler.min.js","sources":["../src/articleleveler.js"],"sourcesContent":["\r\ndefine(['jquery', 'core/log','core/notification','core/str','core/templates','mod_ogte/utils','mod_ogte/clipboardhelper','mod_ogte/popoverhelper'],\r\n    function($, log,notification,str, templates, utils, clipboardhelper,popoverhelper) {\r\n    \"use strict\"; // jshint ;_;\r\n    /*\r\n    This file combines with the articleleveler.mustache template to create the article leveler\r\n     */\r\n\r\n    log.debug('OGTE Article: initialising');\r\n\r\n    var hiddenTextBox = $(\"input[name='text']\");\r\n    var hiddenListIdBox = $(\"input[name='listid']\");\r\n    var hiddenLevelIdBox = $(\"input[name='levelid']\");\r\n    var hiddenIgnoresBox = $(\"input[name='ignores']\");\r\n    var hiddenTitleBox = $(\"input[name='title']\");\r\n    var hiddenJSONRatingBox = $(\"input[name='jsonrating']\");\r\n    var passagebox= $('#the_al_passage');\r\n    var levelstats= $('#the_al_levelstats');\r\n    var articlestats= $('#the_al_articlestats');\r\n    var themessage= $('#the_al_message');\r\n    var thebutton= $('#the_al_button');\r\n    var listselect= $('#the_listselect');\r\n    var levelselect= $('#the_levelselect');\r\n    var addtoIgnoreButton = $('#the_addtoignore');\r\n    var downloadButton = $('.ogte_downloadbutton');\r\n    var clearButton = $('.ogte_clearbutton');\r\n    var sendToEditorButton = $('.ogte_ar_sendtoeditor_button')\r\n    var ignorelist = $('#the_ignorelist');\r\n    var statusmessage =$('#the_al_status_message');\r\n    var outoflistwords_block =$('#the_outoflistwords');\r\n    var outoflevelwords_block =$('#the_outoflevelwords');\r\n    var ignoredwords_block =$('#the_ignoredwords');\r\n    var outoflevelfreq_block =$('#the_outoflevelfreq');\r\n    var ignoredClass = 'mod_ogte_ignored';\r\n    var refreshRequiredClass = 'mod_ogte_refreshrequired';\r\n    var punctuationRegex = /[!\"#$%&'()*+,-./:;<=>?@[\\]^_`{|}~]+$/;\r\n\r\n        var app= {\r\n\r\n        strings:{},\r\n        opts: {},\r\n\r\n        //initialize\r\n        init: function (props) {\r\n            log.debug('initializing article leveler');\r\n\r\n            //pick up opts from html\r\n            var theid = '#' + props.optsid;\r\n            var configcontrol = $(theid).get(0);\r\n            if (configcontrol) {\r\n                this.opts = JSON.parse(configcontrol.value);\r\n                $(theid).remove();\r\n            } else {\r\n                //if there is no config we might as well give up\r\n                log.debug('No config found on page. Giving up.');\r\n                return;\r\n            }\r\n\r\n            this.init_strings();\r\n            this.registerEvents();\r\n            clipboardhelper.init({});\r\n\r\n            //JSON rating\r\n            var jsonrating_string = hiddenJSONRatingBox.val();\r\n            if (this.isJSON(jsonrating_string)) {\r\n                var jsonrating = JSON.parse(jsonrating_string);\r\n                if (jsonrating.hasOwnProperty('passage')) {\r\n                    this.updateAllFromJSONRating(jsonrating);\r\n                }\r\n            }\r\n            //List and Level ID\r\n            var listid='';\r\n            var levelid='';\r\n            if( hiddenListIdBox.length>0 && hiddenLevelIdBox.length>0) {\r\n                listid = hiddenListIdBox.val();\r\n                levelid = hiddenLevelIdBox.val();\r\n            }\r\n\r\n            if (listid !== '' && levelid !== '') {\r\n                listselect.val(listid);\r\n                levelselect.val(levelid);\r\n            }else{\r\n                listselect.prop(\"selectedIndex\", 0);\r\n                var listid = listselect.val();\r\n                this.updateLevelDropdown(listid);\r\n            }\r\n            //Ignores\r\n            var ignores = hiddenIgnoresBox.val();\r\n            if (ignores !== '') {\r\n                ignorelist.val(ignores);\r\n            }\r\n\r\n            //init the popover now that we have set the correct callback event handling thingies\r\n            popoverhelper.init();\r\n            popoverhelper.onIgnore= this.doIgnore;\r\n        },\r\n\r\n\r\n        //init strings\r\n        init_strings: function(){\r\n            var that =this;\r\n            var strs=['alreadyignored','selecttoignore','doignore', 'entersomething','texttoolong5000',\r\n                'ignored','outoflist','outoflevel','outoflevelfreq'];\r\n            for (var key in strs) {\r\n                ///log.debug('getting string: ' + strs[key]);\r\n                var thestring = strs[key];\r\n                str.get_string(thestring,'mod_ogte').done(function(s){that.strings[thestring]=s;});\r\n            }\r\n\r\n            //Promises are promises and jsonrating cant wait around for them sometimes, so we hack it\r\n            that.strings.alreadyignored = \"Already Ignored\";\r\n            that.strings.selecttoignore = \"Select to Ignore\";\r\n            that.strings.doignore = \"Ignore\";\r\n            that.strings.entersomething = \"Enter something\";\r\n            that.strings.texttoolong5000 = \"Text too long (5000 characters max)\";\r\n            that.strings.texttoolong50000 = \"Text too long (50000 characters max)\";\r\n            that.strings.ignored = \"Ignored\";\r\n            that.strings.outoflist = \"Out of List\";\r\n            that.strings.outoflevel = \"Out of Level\";\r\n            that.strings.outoflevelfreq =  \"% Out of Level\";\r\n            that.strings.confirmcleartextarea =  \"Confirm: clear the text area\";\r\n            that.strings.reallycleartextarea =  \"Do you really want to clear the text area?\";\r\n            that.strings.cleartextarea =  \"Clear Text Area\";\r\n            that.strings.cancel =  \"Cancel\";\r\n\r\n            // Set up strings\r\n            str.get_strings([\r\n                { \"key\": \"alreadyignored\", \"component\": 'mod_ogte'},\r\n                { \"key\": \"selecttoignore\", \"component\": 'mod_ogte'},\r\n                { \"key\": 'doignore', \"component\": 'mod_ogte' },\r\n                { \"key\": 'entersomething', \"component\": 'mod_ogte'},\r\n                { \"key\": 'texttoolong5000', \"component\": 'mod_ogte' },\r\n                { \"key\": 'texttoolong50000', \"component\": 'mod_ogte' },\r\n                { \"key\": 'ignored', \"component\": 'mod_ogte' },\r\n                { \"key\": 'outoflist', \"component\": 'mod_ogte'},\r\n                { \"key\": 'outoflevel', \"component\": 'mod_ogte' },\r\n                { \"key\": 'outoflevelfreq', \"component\": 'mod_ogte'},\r\n                { \"key\": 'propernouns', \"component\": 'mod_ogte' },\r\n                { \"key\": 'popoveractions', \"component\": 'mod_ogte'},\r\n                { \"key\": 'confirmcleartextarea', \"component\": 'mod_ogte'},\r\n                { \"key\": 'reallycleartextarea', \"component\": 'mod_ogte'},\r\n                { \"key\": 'cleartextarea', \"component\": 'mod_ogte'},\r\n                { \"key\": 'cancel', \"component\": 'core'},\r\n                \r\n            ]).done(function (s) {\r\n                var i = 0;\r\n                that.strings.alreadyignored = s[i++];\r\n                that.strings.selecttoignore = s[i++];\r\n                that.strings.doignore = s[i++];\r\n                that.strings.entersomething = s[i++];\r\n                that.strings.texttoolong5000 = s[i++];\r\n                that.strings.texttoolong50000 = s[i++];\r\n                that.strings.ignored = s[i++];\r\n                that.strings.outoflist = s[i++];\r\n                that.strings.outoflevel = s[i++];\r\n                that.strings.outoflevelfreq = s[i++];\r\n                that.strings.propernouns = s[i++];\r\n                that.strings.popoveractions = s[i++];\r\n                that.strings.confirmcleartextarea = s[i++];\r\n                that.strings.reallycleartextarea = s[i++];\r\n                that.strings.cleartextarea = s[i++];\r\n                that.strings.cancel = s[i++];\r\n            });\r\n        },\r\n\r\n        clearAllStats: function(){\r\n            templates.render('mod_ogte/levelstatstable', {}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                levelstats.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(levelstats, html, js);\r\n                    levelstats.fadeIn(\"fast\");\r\n                }.bind(this));\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n\r\n            templates.render('mod_ogte/textstatstable', {}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                articlestats.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(articlestats, html, js);\r\n                    articlestats.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n\r\n            templates.render('mod_ogte/block_uncovered',\r\n                {words: false,haswords: false, haslevels: false, title: this.strings.outoflist}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                outoflistwords_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(outoflistwords_block, html, js);\r\n                    outoflistwords_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //out of level words block\r\n            outoflevelwords_block.show();\r\n            templates.render('mod_ogte/block_uncovered',\r\n                {words: false, haswords: false, haslevels: true, title: this.strings.outoflevel}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                outoflevelwords_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(outoflevelwords_block, html, js);\r\n                    outoflevelwords_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //ignored words block\r\n            ignoredwords_block.show();\r\n            templates.render('mod_ogte/block_uncovered',\r\n                {words: false, haswords: false, haslevels: false,title: this.strings.ignored}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                ignoredwords_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(ignoredwords_block, html, js);\r\n                    ignoredwords_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //out of level frequency block\r\n            templates.render('mod_ogte/block_outoflevelfreq',\r\n                {levels: false,haslevels: false, title: this.strings.outoflevelfreq}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                outoflevelfreq_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(outoflevelfreq_block, html, js);\r\n                    outoflevelfreq_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n        },\r\n\r\n        //Update Stats and Analysis\r\n        updateAllFromJSONRating: function (jsonrating) {\r\n            themessage.text('');\r\n            passagebox.html(jsonrating.passage);\r\n\r\n            // Add level stats to the page\r\n            jsonrating.listname=app.opts.listlevels[jsonrating.listid][jsonrating.levelid].listname;\r\n            jsonrating.levelname=app.opts.listlevels[jsonrating.listid][jsonrating.levelid].label;\r\n            templates.render('mod_ogte/levelstatstable', jsonrating).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                levelstats.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(levelstats, html, js);\r\n                    levelstats.fadeIn(\"fast\");\r\n                }.bind(this));\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //add text stats to the page\r\n            var textStatsData = utils.analyzeText(jsonrating.passage);\r\n            templates.render('mod_ogte/textstatstable', textStatsData).done(function(html, js) {\r\n\r\n                    // Update the page.\r\n                articlestats.fadeOut(\"fast\", function() {\r\n                        templates.replaceNodeContents(articlestats, html, js);\r\n                    articlestats.fadeIn(\"fast\");\r\n                    }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //add more coverage stats to the page as blocks\r\n            var ignoredAndOutOfData = utils.analyzeOutListLevelsIgnored(jsonrating.passage);\r\n\r\n            //out of list words block\r\n            outoflistwords_block.show();\r\n            templates.render('mod_ogte/block_uncovered',\r\n                {words: ignoredAndOutOfData.outoflist,haswords: ignoredAndOutOfData.outoflist.length>0, haslevels: false, title: this.strings.outoflist}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                outoflistwords_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(outoflistwords_block, html, js);\r\n                    outoflistwords_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //out of level words block\r\n            outoflevelwords_block.show();\r\n            templates.render('mod_ogte/block_uncovered',\r\n                {words: ignoredAndOutOfData.outoflevel, haswords: ignoredAndOutOfData.outoflevel.length>0, haslevels: true, title: this.strings.outoflevel}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                outoflevelwords_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(outoflevelwords_block, html, js);\r\n                    outoflevelwords_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //ignored words block\r\n            ignoredwords_block.show();\r\n            templates.render('mod_ogte/block_uncovered',\r\n                {words: ignoredAndOutOfData.ignored, haswords: ignoredAndOutOfData.ignored.length>0, haslevels: false,title: this.strings.ignored}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                ignoredwords_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(ignoredwords_block, html, js);\r\n                    ignoredwords_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //out of level frequency block\r\n            var outOfLevelFreqData = utils.calc_outoflevel_frequencies(jsonrating.passage);\r\n            outoflevelfreq_block.show();\r\n            templates.render('mod_ogte/block_outoflevelfreq',\r\n                {levels: outOfLevelFreqData,haslevels: outOfLevelFreqData.length>0, title: this.strings.outoflevelfreq}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                outoflevelfreq_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(outoflevelfreq_block, html, js);\r\n                    outoflevelfreq_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n        },\r\n\r\n\r\n        //is the string JSON?\r\n        isJSON:  function (str) {\r\n            try {\r\n                JSON.parse(str);\r\n                return true;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        //Get selected text in the editable div\r\n        getSelectedText:  function () {\r\n            var selectedText = \"\";\r\n            if (window.getSelection) {\r\n                selectedText = window.getSelection().toString();\r\n            } else if (document.selection && document.selection.type !== \"Control\") {\r\n                selectedText = document.selection.createRange().text;\r\n            }\r\n            return selectedText;\r\n        },\r\n\r\n        // Function to update the options in the second dropdown based on the selection in the first dropdown\r\n        updateLevelDropdown: function () {\r\n            const selectedList = listselect.val();\r\n            // Clear existing options\r\n            levelselect.empty();\r\n\r\n            // Populate options based on the selected category\r\n            app.opts.listlevels[selectedList].forEach(function (option) {\r\n                levelselect.append($('<option value=\"' +option.key+'\">' + option.label+ '</option>'));\r\n            });\r\n            levelselect.prop('selectedIndex', 0);\r\n            hiddenListIdBox.val(selectedList);\r\n            hiddenLevelIdBox.val(levelselect.val());\r\n        },\r\n\r\n        setStatusMessage: function (message) {\r\n            statusmessage.text(message);\r\n            setTimeout(function () {\r\n                statusmessage.fadeOut();\r\n            },2000);\r\n        },\r\n\r\n        doPopover: function (that,e) {\r\n            if(e.target.tagName === \"SPAN\" || e.target.tagName === \"DIV\") {\r\n                var selectedText = $(that).text();\r\n            }else if (e.target.tagName === \"INPUT\" || e.target.tagName === \"TEXTAREA\") {\r\n                var selectedText = that.getSelectedText();\r\n            }\r\n            //if its blank just return\r\n            if (selectedText === '') {\r\n                return;\r\n            }\r\n\r\n            //if its two or more words just return\r\n            var word = selectedText.trim();\r\n            //we only single words\r\n            if (word.includes(\" \")) {\r\n                addtoIgnoreButton.hide();\r\n                return;\r\n            }\r\n\r\n            //trim the word of punctuation\r\n            word = word.replace(punctuationRegex, '');\r\n\r\n            //check if its ignoring already\r\n            var ignores = ignorelist.val();\r\n            var ignoring = ignores.toLowerCase().includes(word.toLowerCase());\r\n\r\n            //show the popover\r\n            popoverhelper.doPopup(that,word,ignoring);\r\n\r\n        },\r\n\r\n        doIgnore: function(word,ignore){\r\n            var ignores = ignorelist.val();\r\n            var ignoring = ignores.toLowerCase().includes(word.toLowerCase());\r\n            //if we want to ignore this word\r\n            if(ignore){\r\n                //if its already ignores, just return\r\n                if(ignoring){\r\n                    log.debug('already ignoring: ' + word);\r\n                    return;\r\n                //ignore it\r\n                }else{\r\n                    log.debug('ignoring: ' + word);\r\n                    var newignorelist = ignores + ' ' + word;\r\n                    ignorelist.val(newignorelist);\r\n                    hiddenIgnoresBox.val(newignorelist);\r\n\r\n                    //find all spans in passagebox that contain the word and add the ignored class\r\n                    var wordRegex = new RegExp('\\\\b' + word + '\\\\b', 'gi'); // Match whole word, case-insensitive\r\n                    passagebox.find('span').filter(function() {\r\n                        return wordRegex.test($(this).text());\r\n                    }).addClass(ignoredClass);\r\n\r\n                    //Add a refresh required class to the GO button\r\n                    thebutton.addClass(refreshRequiredClass);\r\n\r\n                    //app.setStatusMessage(app.strings[\"alreadyignored\"] + word);\r\n                    //addtoIgnoreButton.hide();\r\n                }\r\n            //if we don't want to ignore this word\r\n            }else{\r\n                //un-ignore it\r\n                if(ignoring){\r\n                    log.debug('unignoring: ' + word);\r\n                    var newignorelist = ignores.replace(word, '');\r\n                    ignorelist.val(newignorelist);\r\n                    hiddenIgnoresBox.val(newignorelist);\r\n\r\n\r\n                    //find all spans in passagebox that contain the word and remove the ignored class\r\n                    var wordRegex = new RegExp('\\\\b' + word + '\\\\b', 'gi'); // Match whole word, case-insensitive\r\n                    passagebox.find('span').filter(function() {\r\n                        return wordRegex.test($(this).text());\r\n                    }).removeClass(ignoredClass);\r\n\r\n                    //Add a refresh required class to the GO button\r\n                    thebutton.addClass(refreshRequiredClass);\r\n\r\n                    //app.setStatusMessage(app.strings[\"alreadyignored\"] + word);\r\n                    //addtoIgnoreButton.hide();\r\n                //if its already not ignored, just return\r\n                }else{\r\n                    log.debug('already unignoring: ' + word);\r\n                    return;\r\n                }\r\n            }\r\n        },\r\n\r\n        //Register Event Handlers\r\n        registerEvents: function () {\r\n            var that=this;\r\n            addtoIgnoreButton.on('click', function (e) {\r\n                var word = utils.getSelectedWord();\r\n                if (word !== '') {\r\n                    var newignorelist = ignorelist.val() + ' ' + word;\r\n                    ignorelist.val(newignorelist);\r\n                    hiddenIgnoresBox.val(newignorelist);\r\n                    app.setStatusMessage(app.strings[\"alreadyignored\"] + word);\r\n                    addtoIgnoreButton.hide();\r\n                }\r\n            });\r\n\r\n            downloadButton.on('click', function (e) {\r\n                var target_selector = $(this).attr('data-download-target');\r\n                var text = $(target_selector).text();\r\n\r\n                var filename='article.txt';\r\n                var filename_selector = $(this).attr('data-download-filename');\r\n                if(filename_selector!=='' && filename_selector!==undefined) {\r\n                    filename = $(filename_selector).val() + '.txt';\r\n                    filename=filename.trim().replace(/ /g,\"_\");\r\n                }\r\n                utils.downloadTextContent(text, filename);\r\n            });\r\n\r\n            //handle clear button clicks\r\n            clearButton.on('click', function (e) {\r\n                var that = this;\r\n                notification.confirm(app.strings.confirmcleartextarea, app.strings.reallycleartextarea,app.strings.cleartextarea,app.strings.cancel,function () {\r\n                        var target_selector = $(that).attr('data-clear-target');\r\n                        $(target_selector).html('');\r\n                        //depending on the target, we want to do more than just clear the text\r\n                        log.debug('clearing target: ' + target_selector);\r\n                        switch(target_selector){\r\n                            case '#the_al_passage':\r\n                                hiddenTextBox.val('');\r\n                                app.clearAllStats();\r\n                                break;\r\n                            default:\r\n                        }\r\n                });\r\n            });\r\n\r\n            sendToEditorButton.on('click',function(){\r\n\r\n                //get the article text to update\r\n                var target_selector = $(this).attr('data-send-target');\r\n                var text = $(target_selector).val();\r\n\r\n                //set the text to the article leveler and level it\r\n                passagebox.text(text);\r\n                hiddenTextBox.val(text);\r\n                thebutton.click();\r\n\r\n                //switch to the article leveler tab\r\n                $('.mod_ogte_tab-content .tab-pane').removeClass('active');\r\n                $('.mod_ogte_tab-content #articleleveler').addClass('active');\r\n                $('.mod_ogte_nav-pills .nav-link').removeClass('active');\r\n                $('.mod_ogte_nav-pills a[href=\"#articleleveler\"]').addClass('active');\r\n                $('#articleleveler').tab('show');\r\n\r\n            });\r\n\r\n            //prevent the editable div from creating more divs on copy and paste\r\n            /*\r\n            passagebox.on('paste', function (e) {\r\n                e.preventDefault();\r\n                var text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n                // Insert plain text without additional divs\r\n                $(this).text(text);\r\n                //also update our hidden text box\r\n                hiddenTextBox.val($(this).text());\r\n            });\r\n            */\r\n\r\n            passagebox.on('paste', function (e) {\r\n                e.preventDefault();\r\n                var text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n\r\n                //though execCommand is deprecated, it works better than all the other stuff I tried\r\n                //ie getting cursor postions, and offsets on window and getSelection and ranges and nodes\r\n                //don't bother with all that stuff. It's going to be much better to implement a proper right text editor like this one\r\n                //https://github.com/yabwe/medium-editor\r\n                document.execCommand('inserttext', false, text);\r\n\r\n                //also update our hidden text box\r\n                hiddenTextBox.val($(this).text());\r\n            });\r\n\r\n            //Add the text to the hidden text box used to submit the form when text is edited\r\n            passagebox.on('input', function (e) {\r\n                var thetext = $(this)[0].innerText;\r\n                hiddenTextBox.val(thetext);\r\n            });\r\n/*\r\n            passagebox.on('mouseup', function (e) {\r\n                that.doPopover(this,e);\r\n            });\r\n*/\r\n            passagebox.on('dblclick','span', function (e) {\r\n                that.doPopover(this,e);\r\n            });\r\n\r\n            //Add the ignores list to the hidden text box used to submit the form when text is edited\r\n            ignorelist.on('change', function (e) {\r\n                hiddenIgnoresBox.val($(this).val());\r\n            });\r\n\r\n            listselect.on('change', function (e) {\r\n                var listid =  $(this).val();\r\n                hiddenListIdBox.val(listid);\r\n                that.updateLevelDropdown();\r\n            });\r\n\r\n            //Level select on change\r\n            levelselect.on('change', function (e) {\r\n                var levelid =  $(this).val();\r\n                hiddenLevelIdBox.val(levelid);\r\n            });\r\n\r\n\r\n            thebutton.on('click', function () {\r\n                //show a spinner\r\n                themessage.html('<i class=\"fa fa-spinner fa-spin fa-sm\"></i>');\r\n\r\n                //get text and clean it up\r\n                //TO DO there will be more cleaning to do.\r\n                var thepassage = passagebox[0].innerText;\r\n\r\n                //no super long readings or empty ones\r\n                if (!thepassage || thepassage.trim() === '') {\r\n                    themessage.text(app.strings['entersomething']);\r\n                    return;\r\n                }\r\n                if (thepassage.length > 50000) {\r\n                    themessage.text(app.strings['texttoolong50000']);\r\n                    return;\r\n                }\r\n\r\n                var ignore = ignorelist.val();\r\n                var listid = listselect.val();\r\n                var listlevel = levelselect.val();\r\n                var ogteid=app.opts.ogteid;\r\n                utils.levelPassage(thepassage, ignore, listid, listlevel, ogteid).then(function (ajaxresult) {\r\n                    var theresponse = JSON.parse(ajaxresult);\r\n                    if (theresponse) {\r\n                        hiddenJSONRatingBox.val(ajaxresult);\r\n                        that.updateAllFromJSONRating(theresponse);\r\n                        //if we were showing that a refresh was required, we remove that now, it's been refreshed\r\n                        thebutton.removeClass(refreshRequiredClass);\r\n                    } else {\r\n                        log.debug('ajax call to level coverage failed');\r\n                    }\r\n                });//end of level passage\r\n            });//end of click\r\n\r\n        },\r\n\r\n    };\r\n    return app;\r\n\r\n});"],"names":["define","$","log","notification","str","templates","utils","clipboardhelper","popoverhelper","debug","hiddenTextBox","hiddenListIdBox","hiddenLevelIdBox","hiddenIgnoresBox","hiddenJSONRatingBox","passagebox","levelstats","articlestats","themessage","thebutton","listselect","levelselect","addtoIgnoreButton","downloadButton","clearButton","sendToEditorButton","ignorelist","statusmessage","outoflistwords_block","outoflevelwords_block","ignoredwords_block","outoflevelfreq_block","punctuationRegex","app","strings","opts","init","props","theid","optsid","configcontrol","get","JSON","parse","value","remove","init_strings","registerEvents","jsonrating_string","val","this","isJSON","jsonrating","hasOwnProperty","updateAllFromJSONRating","listid","levelid","length","prop","updateLevelDropdown","ignores","onIgnore","doIgnore","that","strs","key","thestring","get_string","done","s","alreadyignored","selecttoignore","doignore","entersomething","texttoolong5000","texttoolong50000","ignored","outoflist","outoflevel","outoflevelfreq","confirmcleartextarea","reallycleartextarea","cleartextarea","cancel","get_strings","i","propernouns","popoveractions","clearAllStats","render","html","js","fadeOut","replaceNodeContents","fadeIn","bind","fail","exception","words","haswords","haslevels","title","show","levels","text","passage","listname","listlevels","levelname","label","textStatsData","analyzeText","ignoredAndOutOfData","analyzeOutListLevelsIgnored","outOfLevelFreqData","calc_outoflevel_frequencies","e","getSelectedText","selectedText","window","getSelection","toString","document","selection","type","createRange","selectedList","empty","forEach","option","append","setStatusMessage","message","setTimeout","doPopover","target","tagName","word","trim","includes","hide","replace","ignoring","toLowerCase","doPopup","ignore","newignorelist","wordRegex","RegExp","find","filter","test","addClass","removeClass","on","getSelectedWord","target_selector","attr","filename","filename_selector","undefined","downloadTextContent","confirm","click","tab","preventDefault","originalEvent","clipboardData","getData","execCommand","thetext","innerText","thepassage","listlevel","ogteid","levelPassage","then","ajaxresult","theresponse"],"mappings":"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"}