{"version":3,"file":"articleleveler.min.js","sources":["../src/articleleveler.js"],"sourcesContent":["\r\ndefine(['jquery', 'core/log','core/str','mod_ogte/utils'], function($, log,str, utils) {\r\n    \"use strict\"; // jshint ;_;\r\n    /*\r\n    This file combines with the articleleveler.mustache template to create the article leveler\r\n     */\r\n\r\n    log.debug('OGTE Article: initialising');\r\n\r\n    var hiddenTextBox = $(\"input[name='text']\");\r\n    var hiddenListIdBox = $(\"input[name='listid']\");\r\n    var hiddenLevelIdBox = $(\"input[name='levelid']\");\r\n    var hiddenIgnoresBox = $(\"input[name='ignores']\");\r\n    var hiddenTitleBox = $(\"input[name='title']\");\r\n    var hiddenJSONRatingBox = $(\"input[name='jsonrating']\");\r\n    var passagebox= $('#the_al_passage');\r\n    var levelstats= $('#the_al_levelstats');\r\n    var articlestats= $('#the_al_articlestats');\r\n    var themessage= $('#the_al_message');\r\n    var thebutton= $('#the_al_button');\r\n    var listselect= $('#the_listselect');\r\n    var levelselect= $('#the_levelselect');\r\n    var addtoIgnoreButton = $('#the_addtoignore');\r\n    var ignorelist = $('#the_ignorelist');\r\n    var statusmessage =$('#the_al_status_message');\r\n\r\n    var app= {\r\n\r\n        strings:[],\r\n        opts: {},\r\n\r\n        //initialize\r\n        init: function (props) {\r\n            log.debug('initializing article leveler');\r\n\r\n            //pick up opts from html\r\n            var theid = '#' + props.optsid;\r\n            var configcontrol = $(theid).get(0);\r\n            if (configcontrol) {\r\n                this.opts = JSON.parse(configcontrol.value);\r\n                $(theid).remove();\r\n            } else {\r\n                //if there is no config we might as well give up\r\n                log.debug('No config found on page. Giving up.');\r\n                return;\r\n            }\r\n\r\n            this.init_strings();\r\n            this.registerEvents();\r\n\r\n            //JSON rating\r\n            var jsonrating_string = hiddenJSONRatingBox.val();\r\n            log.debug('is json?');\r\n            if (this.isJSON(jsonrating_string)) {\r\n                log.debug('yes json');\r\n                var jsonrating = JSON.parse(jsonrating_string);\r\n                log.debug('is level stats');\r\n                if (jsonrating.hasOwnProperty('passage')) {\r\n                    log.debug('yes level stats');\r\n                    this.updateAllFromJSONRating(jsonrating);\r\n                }\r\n            }\r\n            //List and Level ID\r\n            var listid = hiddenListIdBox.val();\r\n            var levelid = hiddenLevelIdBox.val();\r\n            if (listid !== '' && levelid !== '') {\r\n                listselect.val(listid);\r\n                levelselect.val(levelid);\r\n            }\r\n            //Ignores\r\n            var ignores = hiddenIgnoresBox.val();\r\n            if (ignores !== '') {\r\n                ignorelist.val(ignores);\r\n            }\r\n        },\r\n\r\n\r\n        //init strings\r\n        init_strings: function(){\r\n            var that =this;\r\n            var strs=['already-ignored','select-to-ignore','do-ignore', 'enter-something','text-too-long-5000'];\r\n            for (var key in strs) {\r\n                var thestring = strs[key];\r\n                str.get_string(thestring,'mod_ogte').done(function(s){that.strings[thestring]=s;});\r\n            }\r\n        },\r\n\r\n        //Update Stats and Analysis\r\n        updateAllFromJSONRating: function (jsonrating) {\r\n            log.debug('updateAllFromJSONRating');\r\n            themessage.text('');\r\n            passagebox.html(jsonrating.passage);\r\n\r\n            //add stats to original\r\n            var articleStatsTable = utils.analyzeText(jsonrating.passage);\r\n            articlestats.html(articleStatsTable);\r\n            articlestats.show();\r\n\r\n            var levelStatsTable = utils.levelStats(jsonrating);\r\n            levelstats.html(levelStatsTable);\r\n            levelstats.show();\r\n        },\r\n\r\n        //is the string JSON?\r\n        isJSON:  function (str) {\r\n            try {\r\n                JSON.parse(str);\r\n                return true;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        //Get selected text in the editable div\r\n        getSelectedText:  function () {\r\n            var selectedText = \"\";\r\n            if (window.getSelection) {\r\n                selectedText = window.getSelection().toString();\r\n            } else if (document.selection && document.selection.type !== \"Control\") {\r\n                selectedText = document.selection.createRange().text;\r\n            }\r\n            return selectedText;\r\n        },\r\n\r\n        // Function to update the options in the second dropdown based on the selection in the first dropdown\r\n        updateLevelDropdown: function () {\r\n            const selectedList = listselect.val();\r\n            log.debug('selected list: ' + selectedList);\r\n            // Clear existing options\r\n            levelselect.empty();\r\n\r\n            // Populate options based on the selected category\r\n            app.opts.listlevels[selectedList].forEach(function (option) {\r\n                levelselect.append($('<option value=\"' +option.key+'\">' + option.label+ '</option>'));\r\n            });\r\n            levelselect.prop('selectedIndex', 0);\r\n            hiddenListIdBox.val(selectedList);\r\n            hiddenLevelIdBox.val(levelselect.val());\r\n        },\r\n\r\n        //Register Event Handlers\r\n        registerEvents: function () {\r\n            var that=this;\r\n            addtoIgnoreButton.on('click', function (e) {\r\n                var word = utils.getSelectedWord();\r\n                if (word !== '') {\r\n                    var newignorelist = ignorelist.val() + ' ' + word;\r\n                    ignorelist.val(newignorelist);\r\n                    hiddenIgnoresBox.val(newignorelist);\r\n                    statusmessage.text(app.strings[\"already-ignored\"] + word);\r\n                    addtoIgnoreButton.hide();\r\n                }\r\n            });\r\n\r\n            //prevent the editable div from creating more divs on copy and paste\r\n            passagebox.on('paste', function (e) {\r\n                e.preventDefault();\r\n                var text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n                // Insert plain text without additional divs\r\n                $(this).text(text);\r\n                //also update our hidden text box\r\n                hiddenTextBox.val($(this).text());\r\n            });\r\n\r\n            //Add the text to the hidden text box used to submit the form when text is edited\r\n            passagebox.on('input', function (e) {\r\n                var thetext = $(this)[0].innerText;\r\n                hiddenTextBox.val(thetext);\r\n            });\r\n\r\n            passagebox.on('mouseup', function (e) {\r\n                var selectedText = getSelectedText();\r\n                if (selectedText === '') {\r\n                    statusmessage.text(app.strings[\"select-to-ignore\"]);\r\n                    addtoIgnoreButton.hide();\r\n                    return;\r\n                } else {\r\n                    var word = selectedText.trim();\r\n                    //we only single words\r\n                    if (word.includes(\" \")) {\r\n                        statusmessage.text(app.strings[\"select-to-ignore\"]);\r\n                        addtoIgnoreButton.hide();\r\n                        return;\r\n                    }\r\n                    //we only want words that we did not ignore yet\r\n                    var ignores = ignorelist.val();\r\n                    if (ignores.toLowerCase().includes(word.toLowerCase())) {\r\n                        statusmessage.text(app.strings[\"already-ignored\"] + word);\r\n                        addtoIgnoreButton.hide();\r\n                        return;\r\n                    }\r\n\r\n                    //if we get here its ignorable\r\n                    statusmessage.text(\"\");\r\n                    addtoIgnoreButton.text(app.strings[\"do-ignore\"] + word);\r\n                    addtoIgnoreButton.data(\"ignore\", word);\r\n                    addtoIgnoreButton.show();\r\n                }\r\n            });\r\n\r\n            //Add the ignores list to the hidden text box used to submit the form when text is edited\r\n            ignorelist.on('change', function (e) {\r\n                hiddenIgnoresBox.val($(this).val());\r\n            });\r\n\r\n            listselect.on('change', function (e) {\r\n                var listid =  $(this).val();\r\n                hiddenListIdBox.val(listid);\r\n                that.updateLevelDropdown();\r\n            });\r\n\r\n            //Level select on change\r\n            levelselect.on('change', function (e) {\r\n                var levelid =  $(this).val();\r\n                hiddenLevelIdBox.val(levelid);\r\n            });\r\n\r\n\r\n            thebutton.on('click', function () {\r\n                //show a spinner\r\n                themessage.html('<i class=\"fa fa-spinner fa-spin fa-sm\"></i>');\r\n\r\n                //get text and clean it up\r\n                //TO DO there will be more cleaning to do.\r\n                var thepassage = passagebox[0].innerText;\r\n\r\n                //no super long readings or empty ones\r\n                if (!thepassage || thepassage.trim() === '') {\r\n                    themessage.text(app.strings['enter-something']);\r\n                    return;\r\n                }\r\n                if (thepassage.length > 5000) {\r\n                    themessage.text(app.strings['text-too-long-5000']);\r\n                    return;\r\n                }\r\n                var language = 'en-US';\r\n\r\n                var ignore = ignorelist.val();\r\n                var listid = listselect.val();\r\n                var listlevel = levelselect.val();\r\n                var ogteid=app.opts.ogteid;\r\n\r\n                utils.levelPassage(thepassage, ignore, listid, listlevel, ogteid).then(function (ajaxresult) {\r\n                    var theresponse = JSON.parse(ajaxresult);\r\n                    if (theresponse) {\r\n                        hiddenJSONRatingBox.val(ajaxresult);\r\n                        that.updateAllFromJSONRating(theresponse);\r\n                    } else {\r\n                        log.debug('ajax call to level coverage failed');\r\n                    }\r\n                });//end of level passage\r\n            });//end of click\r\n\r\n        },\r\n\r\n    };\r\n    return app;\r\n\r\n});"],"names":["define","$","log","str","utils","debug","hiddenTextBox","hiddenListIdBox","hiddenLevelIdBox","hiddenIgnoresBox","hiddenJSONRatingBox","passagebox","levelstats","articlestats","themessage","thebutton","listselect","levelselect","addtoIgnoreButton","ignorelist","statusmessage","app","strings","opts","init","props","theid","optsid","configcontrol","get","JSON","parse","value","remove","init_strings","registerEvents","jsonrating_string","val","this","isJSON","jsonrating","hasOwnProperty","updateAllFromJSONRating","listid","levelid","ignores","that","strs","key","thestring","get_string","done","s","text","html","passage","articleStatsTable","analyzeText","show","levelStatsTable","levelStats","e","getSelectedText","selectedText","window","getSelection","toString","document","selection","type","createRange","updateLevelDropdown","selectedList","empty","listlevels","forEach","option","append","label","prop","on","word","getSelectedWord","newignorelist","hide","preventDefault","originalEvent","clipboardData","getData","thetext","innerText","trim","includes","toLowerCase","data","thepassage","length","ignore","listlevel","ogteid","levelPassage","then","ajaxresult","theresponse"],"mappings":"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"}