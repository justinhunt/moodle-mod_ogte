{"version":3,"file":"articleleveler.min.js","sources":["../src/articleleveler.js"],"sourcesContent":["\r\ndefine(['jquery', 'core/log','core/notification','core/str','core/templates','mod_ogte/utils','mod_ogte/clipboardhelper'], function($, log,notification,str, templates, utils, clipboardhelper) {\r\n    \"use strict\"; // jshint ;_;\r\n    /*\r\n    This file combines with the articleleveler.mustache template to create the article leveler\r\n     */\r\n\r\n    log.debug('OGTE Article: initialising');\r\n\r\n    var hiddenTextBox = $(\"input[name='text']\");\r\n    var hiddenListIdBox = $(\"input[name='listid']\");\r\n    var hiddenLevelIdBox = $(\"input[name='levelid']\");\r\n    var hiddenIgnoresBox = $(\"input[name='ignores']\");\r\n    var hiddenTitleBox = $(\"input[name='title']\");\r\n    var hiddenJSONRatingBox = $(\"input[name='jsonrating']\");\r\n    var passagebox= $('#the_al_passage');\r\n    var levelstats= $('#the_al_levelstats');\r\n    var articlestats= $('#the_al_articlestats');\r\n    var themessage= $('#the_al_message');\r\n    var thebutton= $('#the_al_button');\r\n    var listselect= $('#the_listselect');\r\n    var levelselect= $('#the_levelselect');\r\n    var addtoIgnoreButton = $('#the_addtoignore');\r\n    var downloadButton = $('.ogte_downloadbutton');\r\n    var ignorelist = $('#the_ignorelist');\r\n    var statusmessage =$('#the_al_status_message');\r\n    var outoflistwords_block =$('#the_outoflistwords');\r\n    var outoflevelwords_block =$('#the_outoflevelwords');\r\n    var ignoredwords_block =$('#the_ignoredwords');\r\n    var outoflevelfreq_block =$('#the_outoflevelfreq');\r\n\r\n    var app= {\r\n\r\n        strings:{},\r\n        opts: {},\r\n\r\n        //initialize\r\n        init: function (props) {\r\n            log.debug('initializing article leveler');\r\n\r\n            //pick up opts from html\r\n            var theid = '#' + props.optsid;\r\n            var configcontrol = $(theid).get(0);\r\n            if (configcontrol) {\r\n                this.opts = JSON.parse(configcontrol.value);\r\n                $(theid).remove();\r\n            } else {\r\n                //if there is no config we might as well give up\r\n                log.debug('No config found on page. Giving up.');\r\n                return;\r\n            }\r\n\r\n            this.init_strings();\r\n            this.registerEvents();\r\n            clipboardhelper.init({});\r\n\r\n            //JSON rating\r\n            var jsonrating_string = hiddenJSONRatingBox.val();\r\n            log.debug('is json?');\r\n            if (this.isJSON(jsonrating_string)) {\r\n                log.debug('yes json');\r\n                var jsonrating = JSON.parse(jsonrating_string);\r\n                log.debug('is level stats');\r\n                if (jsonrating.hasOwnProperty('passage')) {\r\n                    log.debug('yes level stats');\r\n                    this.updateAllFromJSONRating(jsonrating);\r\n                }\r\n            }\r\n            //List and Level ID\r\n            var listid = hiddenListIdBox.val();\r\n            var levelid = hiddenLevelIdBox.val();\r\n            if (listid !== '' && levelid !== '') {\r\n                listselect.val(listid);\r\n                levelselect.val(levelid);\r\n            }else{\r\n                var listid = listselect.val();\r\n                this.updateLevelDropdown(listid);\r\n            }\r\n            //Ignores\r\n            var ignores = hiddenIgnoresBox.val();\r\n            if (ignores !== '') {\r\n                ignorelist.val(ignores);\r\n            }\r\n        },\r\n\r\n\r\n        //init strings\r\n        init_strings: function(){\r\n            var that =this;\r\n            var strs=['alreadyignored','selecttoignore','doignore', 'entersomething','texttoolong5000',\r\n                'ignored','outoflist','outoflevel','outoflevelfreq'];\r\n            for (var key in strs) {\r\n                ///log.debug('getting string: ' + strs[key]);\r\n                var thestring = strs[key];\r\n                str.get_string(thestring,'mod_ogte').done(function(s){that.strings[thestring]=s;});\r\n            }\r\n\r\n            //Promises are promises and jsonrating cant wait around for them, so we hack it\r\n            that.strings.alreadyignored = \"Already Ignored\";\r\n            that.strings.selecttoignore = \"Select to Ignore\";\r\n            that.strings.doignore = \"Ignore\";\r\n            that.strings.entersomething = \"Enter something\";\r\n            that.strings.texttoolong5000 = \"Text too long (5000 characters max)\";\r\n            that.strings.ignored = \"Ignored\";\r\n            that.strings.outoflist = \"Out of List\";\r\n            that.strings.outoflevel = \"Out of Level\";\r\n            that.strings.outoflevelfreq =  \"% Out of Level\";\r\n\r\n            // Set up strings\r\n            str.get_strings([\r\n                { \"key\": \"alreadyignored\", \"component\": 'mod_ogte'},\r\n                { \"key\": \"selecttoignore\", \"component\": 'mod_ogte'},\r\n                { \"key\": 'doignore', \"component\": 'mod_ogte' },\r\n                { \"key\": 'entersomething', \"component\": 'mod_ogte'},\r\n                { \"key\": 'texttoolong5000', \"component\": 'mod_ogte' },\r\n                { \"key\": 'ignored', \"component\": 'mod_ogte' },\r\n                { \"key\": 'outoflist', \"component\": 'mod_ogte'},\r\n                { \"key\": 'outoflevel', \"component\": 'mod_ogte' },\r\n                { \"key\": 'outoflevelfreq', \"component\": 'mod_ogte'},\r\n                \r\n            ]).done(function (s) {\r\n                var i = 0;\r\n                that.strings.alreadyignored = s[i++];\r\n                that.strings.selecttoignore = s[i++];\r\n                that.strings.doignore = s[i++];\r\n                that.strings.entersomething = s[i++];\r\n                that.strings.texttoolong5000 = s[i++];\r\n                that.strings.ignored = s[i++];\r\n                that.strings.outoflist = s[i++];\r\n                that.strings.outoflevel = s[i++];\r\n                that.strings.outoflevelfreq = s[i++];\r\n            });\r\n        },\r\n\r\n        //Update Stats and Analysis\r\n        updateAllFromJSONRating: function (jsonrating) {\r\n            log.debug('updateAllFromJSONRating');\r\n            themessage.text('');\r\n            passagebox.html(jsonrating.passage);\r\n\r\n            // Add level stats to the page\r\n            jsonrating.listname=app.opts.listlevels[jsonrating.listid][jsonrating.levelid].listname;\r\n            jsonrating.levelname=app.opts.listlevels[jsonrating.listid][jsonrating.levelid].label;\r\n            templates.render('mod_ogte/levelstatstable', jsonrating).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                levelstats.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(levelstats, html, js);\r\n                    levelstats.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //add text stats to the page\r\n            var textStatsData = utils.analyzeText(jsonrating.passage);\r\n            templates.render('mod_ogte/textstatstable', textStatsData).done(function(html, js) {\r\n\r\n                    // Update the page.\r\n                articlestats.fadeOut(\"fast\", function() {\r\n                        templates.replaceNodeContents(articlestats, html, js);\r\n                    articlestats.fadeIn(\"fast\");\r\n                    }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //add more coverage stats to the page as blocks\r\n            var ignoredAndOutOfData = utils.analyzeOutListLevelsIgnored(jsonrating.passage);\r\n\r\n            //out of list words block\r\n            outoflistwords_block.show();\r\n            templates.render('mod_ogte/block_uncovered',\r\n                {words: ignoredAndOutOfData.outoflist,haswords: ignoredAndOutOfData.outoflist.length>0, haslevels: false, title: this.strings.outoflist}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                outoflistwords_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(outoflistwords_block, html, js);\r\n                    outoflistwords_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //out of level words block\r\n            outoflevelwords_block.show();\r\n            templates.render('mod_ogte/block_uncovered',\r\n                {words: ignoredAndOutOfData.outoflevel, haswords: ignoredAndOutOfData.outoflevel.length>0, haslevels: true, title: this.strings.outoflevel}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                outoflevelwords_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(outoflevelwords_block, html, js);\r\n                    outoflevelwords_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //ignored words block\r\n            ignoredwords_block.show();\r\n            templates.render('mod_ogte/block_uncovered',\r\n                {words: ignoredAndOutOfData.ignored, haswords: ignoredAndOutOfData.ignored.length>0, haslevels: false,title: this.strings.ignored}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                ignoredwords_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(ignoredwords_block, html, js);\r\n                    ignoredwords_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //out of level frequency block\r\n            var outOfLevelFreqData = utils.calc_outoflevel_frequencies(jsonrating.passage);\r\n            outoflevelfreq_block.show();\r\n            templates.render('mod_ogte/block_outoflevelfreq',\r\n                {levels: outOfLevelFreqData,haslevels: outOfLevelFreqData.length>0, title: this.strings.outoflevelfreq}).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                outoflevelfreq_block.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(outoflevelfreq_block, html, js);\r\n                    outoflevelfreq_block.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n        },\r\n\r\n\r\n        //is the string JSON?\r\n        isJSON:  function (str) {\r\n            try {\r\n                JSON.parse(str);\r\n                return true;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        //Get selected text in the editable div\r\n        getSelectedText:  function () {\r\n            var selectedText = \"\";\r\n            if (window.getSelection) {\r\n                selectedText = window.getSelection().toString();\r\n            } else if (document.selection && document.selection.type !== \"Control\") {\r\n                selectedText = document.selection.createRange().text;\r\n            }\r\n            return selectedText;\r\n        },\r\n\r\n        // Function to update the options in the second dropdown based on the selection in the first dropdown\r\n        updateLevelDropdown: function () {\r\n            const selectedList = listselect.val();\r\n            log.debug('selected list: ' + selectedList);\r\n            // Clear existing options\r\n            levelselect.empty();\r\n\r\n            // Populate options based on the selected category\r\n            app.opts.listlevels[selectedList].forEach(function (option) {\r\n                levelselect.append($('<option value=\"' +option.key+'\">' + option.label+ '</option>'));\r\n            });\r\n            levelselect.prop('selectedIndex', 0);\r\n            hiddenListIdBox.val(selectedList);\r\n            hiddenLevelIdBox.val(levelselect.val());\r\n        },\r\n\r\n        setStatusMessage: function (message) {\r\n            statusmessage.text(message);\r\n            setTimeout(function () {\r\n                statusmessage.fadeOut();\r\n            },2000);\r\n        },\r\n\r\n        //Register Event Handlers\r\n        registerEvents: function () {\r\n            var that=this;\r\n            addtoIgnoreButton.on('click', function (e) {\r\n                var word = utils.getSelectedWord();\r\n                if (word !== '') {\r\n                    var newignorelist = ignorelist.val() + ' ' + word;\r\n                    ignorelist.val(newignorelist);\r\n                    hiddenIgnoresBox.val(newignorelist);\r\n                    app.setStatusMessage(app.strings[\"alreadyignored\"] + word);\r\n                    addtoIgnoreButton.hide();\r\n                }\r\n            });\r\n\r\n            downloadButton.on('click', function (e) {\r\n                var target_selector = $(this).attr('data-download-target');\r\n                var text = $(target_selector).text();\r\n\r\n                var filename='article.txt';\r\n                var filename_selector = $(this).attr('data-download-filename');\r\n                if(filename_selector!=='' && filename_selector!==undefined) {\r\n                    filename = $(filename_selector).val() + '.txt';\r\n                    filename=filename.trim().replace(/ /g,\"_\");\r\n                }\r\n                utils.downloadTextContent(text, filename);\r\n            });\r\n\r\n            //prevent the editable div from creating more divs on copy and paste\r\n            passagebox.on('paste', function (e) {\r\n                e.preventDefault();\r\n                var text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n                // Insert plain text without additional divs\r\n                $(this).text(text);\r\n                //also update our hidden text box\r\n                hiddenTextBox.val($(this).text());\r\n            });\r\n\r\n            //Add the text to the hidden text box used to submit the form when text is edited\r\n            passagebox.on('input', function (e) {\r\n                var thetext = $(this)[0].innerText;\r\n                hiddenTextBox.val(thetext);\r\n            });\r\n\r\n            passagebox.on('mouseup', function (e) {\r\n                var selectedText = that.getSelectedText();\r\n                if (selectedText === '') {\r\n                    addtoIgnoreButton.hide();\r\n                    return;\r\n                } else {\r\n                    var word = selectedText.trim();\r\n                    //we only single words\r\n                    if (word.includes(\" \")) {\r\n                        addtoIgnoreButton.hide();\r\n                        return;\r\n                    }\r\n                    //we only want words that we did not ignore yet\r\n                    var ignores = ignorelist.val();\r\n                    if (ignores.toLowerCase().includes(word.toLowerCase())) {\r\n                        app.setStatusMessage(app.strings[\"alreadyignored\"] + word);\r\n                        addtoIgnoreButton.hide();\r\n                        return;\r\n                    }\r\n\r\n                    //if we get here its ignorable\r\n                    statusmessage.text(\"\");\r\n                    addtoIgnoreButton.text(app.strings[\"doignore\"] + word);\r\n                    addtoIgnoreButton.data(\"ignore\", word);\r\n                    addtoIgnoreButton.show();\r\n                }\r\n            });\r\n\r\n            //Add the ignores list to the hidden text box used to submit the form when text is edited\r\n            ignorelist.on('change', function (e) {\r\n                hiddenIgnoresBox.val($(this).val());\r\n            });\r\n\r\n            listselect.on('change', function (e) {\r\n                var listid =  $(this).val();\r\n                hiddenListIdBox.val(listid);\r\n                that.updateLevelDropdown();\r\n            });\r\n\r\n            //Level select on change\r\n            levelselect.on('change', function (e) {\r\n                var levelid =  $(this).val();\r\n                hiddenLevelIdBox.val(levelid);\r\n            });\r\n\r\n\r\n            thebutton.on('click', function () {\r\n                //show a spinner\r\n                themessage.html('<i class=\"fa fa-spinner fa-spin fa-sm\"></i>');\r\n\r\n                //get text and clean it up\r\n                //TO DO there will be more cleaning to do.\r\n                var thepassage = passagebox[0].innerText;\r\n\r\n                //no super long readings or empty ones\r\n                if (!thepassage || thepassage.trim() === '') {\r\n                    themessage.text(app.strings['entersomething']);\r\n                    return;\r\n                }\r\n                if (thepassage.length > 50000) {\r\n                    themessage.text(app.strings['texttoolong5000']);\r\n                    return;\r\n                }\r\n                var language = 'en-US';\r\n\r\n                var ignore = ignorelist.val();\r\n                var listid = listselect.val();\r\n                var listlevel = levelselect.val();\r\n                var ogteid=app.opts.ogteid;\r\n\r\n                utils.levelPassage(thepassage, ignore, listid, listlevel, ogteid).then(function (ajaxresult) {\r\n                    var theresponse = JSON.parse(ajaxresult);\r\n                    if (theresponse) {\r\n                        hiddenJSONRatingBox.val(ajaxresult);\r\n                        that.updateAllFromJSONRating(theresponse);\r\n                    } else {\r\n                        log.debug('ajax call to level coverage failed');\r\n                    }\r\n                });//end of level passage\r\n            });//end of click\r\n\r\n        },\r\n\r\n    };\r\n    return app;\r\n\r\n});"],"names":["define","$","log","notification","str","templates","utils","clipboardhelper","debug","hiddenTextBox","hiddenListIdBox","hiddenLevelIdBox","hiddenIgnoresBox","hiddenJSONRatingBox","passagebox","levelstats","articlestats","themessage","thebutton","listselect","levelselect","addtoIgnoreButton","downloadButton","ignorelist","statusmessage","outoflistwords_block","outoflevelwords_block","ignoredwords_block","outoflevelfreq_block","app","strings","opts","init","props","theid","optsid","configcontrol","get","JSON","parse","value","remove","init_strings","registerEvents","jsonrating_string","val","this","isJSON","jsonrating","hasOwnProperty","updateAllFromJSONRating","listid","levelid","updateLevelDropdown","ignores","that","strs","key","thestring","get_string","done","s","alreadyignored","selecttoignore","doignore","entersomething","texttoolong5000","ignored","outoflist","outoflevel","outoflevelfreq","get_strings","i","text","html","passage","listname","listlevels","levelname","label","render","js","fadeOut","replaceNodeContents","fadeIn","bind","fail","exception","textStatsData","analyzeText","ignoredAndOutOfData","analyzeOutListLevelsIgnored","show","words","haswords","length","haslevels","title","outOfLevelFreqData","calc_outoflevel_frequencies","levels","e","getSelectedText","selectedText","window","getSelection","toString","document","selection","type","createRange","selectedList","empty","forEach","option","append","prop","setStatusMessage","message","setTimeout","on","word","getSelectedWord","newignorelist","hide","target_selector","attr","filename","filename_selector","undefined","trim","replace","downloadTextContent","preventDefault","originalEvent","clipboardData","getData","thetext","innerText","includes","toLowerCase","data","thepassage","ignore","listlevel","ogteid","levelPassage","then","ajaxresult","theresponse"],"mappings":"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"}