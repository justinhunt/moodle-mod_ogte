{"version":3,"file":"articleleveler.min.js","sources":["../src/articleleveler.js"],"sourcesContent":["\r\ndefine(['jquery', 'core/log','core/notification','core/str','core/templates','mod_ogte/utils'], function($, log,notification,str, templates, utils) {\r\n    \"use strict\"; // jshint ;_;\r\n    /*\r\n    This file combines with the articleleveler.mustache template to create the article leveler\r\n     */\r\n\r\n    log.debug('OGTE Article: initialising');\r\n\r\n    var hiddenTextBox = $(\"input[name='text']\");\r\n    var hiddenListIdBox = $(\"input[name='listid']\");\r\n    var hiddenLevelIdBox = $(\"input[name='levelid']\");\r\n    var hiddenIgnoresBox = $(\"input[name='ignores']\");\r\n    var hiddenTitleBox = $(\"input[name='title']\");\r\n    var hiddenJSONRatingBox = $(\"input[name='jsonrating']\");\r\n    var passagebox= $('#the_al_passage');\r\n    var levelstats= $('#the_al_levelstats');\r\n    var articlestats= $('#the_al_articlestats');\r\n    var themessage= $('#the_al_message');\r\n    var thebutton= $('#the_al_button');\r\n    var listselect= $('#the_listselect');\r\n    var levelselect= $('#the_levelselect');\r\n    var addtoIgnoreButton = $('#the_addtoignore');\r\n    var ignorelist = $('#the_ignorelist');\r\n    var statusmessage =$('#the_al_status_message');\r\n\r\n    var app= {\r\n\r\n        strings:{},\r\n        opts: {},\r\n\r\n        //initialize\r\n        init: function (props) {\r\n            log.debug('initializing article leveler');\r\n\r\n            //pick up opts from html\r\n            var theid = '#' + props.optsid;\r\n            var configcontrol = $(theid).get(0);\r\n            if (configcontrol) {\r\n                this.opts = JSON.parse(configcontrol.value);\r\n                $(theid).remove();\r\n            } else {\r\n                //if there is no config we might as well give up\r\n                log.debug('No config found on page. Giving up.');\r\n                return;\r\n            }\r\n\r\n            this.init_strings();\r\n            this.registerEvents();\r\n\r\n            //JSON rating\r\n            var jsonrating_string = hiddenJSONRatingBox.val();\r\n            log.debug('is json?');\r\n            if (this.isJSON(jsonrating_string)) {\r\n                log.debug('yes json');\r\n                var jsonrating = JSON.parse(jsonrating_string);\r\n                log.debug('is level stats');\r\n                if (jsonrating.hasOwnProperty('passage')) {\r\n                    log.debug('yes level stats');\r\n                    this.updateAllFromJSONRating(jsonrating);\r\n                }\r\n            }\r\n            //List and Level ID\r\n            var listid = hiddenListIdBox.val();\r\n            var levelid = hiddenLevelIdBox.val();\r\n            if (listid !== '' && levelid !== '') {\r\n                listselect.val(listid);\r\n                levelselect.val(levelid);\r\n            }else{\r\n                var listid = listselect.val();\r\n                this.updateLevelDropdown(listid);\r\n            }\r\n            //Ignores\r\n            var ignores = hiddenIgnoresBox.val();\r\n            if (ignores !== '') {\r\n                ignorelist.val(ignores);\r\n            }\r\n        },\r\n\r\n\r\n        //init strings\r\n        init_strings: function(){\r\n            var that =this;\r\n            var strs=['alreadyignored','selecttoignore','doignore', 'entersomething','texttoolong5000'];\r\n            for (var key in strs) {\r\n                ///log.debug('getting string: ' + strs[key]);\r\n                var thestring = strs[key];\r\n                str.get_string(thestring,'mod_ogte').done(function(s){that.strings[thestring]=s;});\r\n            }\r\n\r\n            // Set up strings\r\n            str.get_strings([\r\n                { \"key\": \"alreadyignored\", \"component\": 'mod_ogte'},\r\n                { \"key\": \"selecttoignore\", \"component\": 'mod_ogte'},\r\n                { \"key\": 'doignore', \"component\": 'mod_ogte' },\r\n                { \"key\": 'entersomething', \"component\": 'mod_ogte'},\r\n                { \"key\": 'texttoolong5000', \"component\": 'mod_ogte' },\r\n                \r\n            ]).done(function (s) {\r\n                var i = 0;\r\n                that.strings.alreadyignored = s[i++];\r\n                that.strings.selecttoignore = s[i++];\r\n                that.strings.doignore = s[i++];\r\n                that.strings.entersomething = s[i++];\r\n                that.strings.texttoolong5000 = s[i++];\r\n            });\r\n        },\r\n\r\n        //Update Stats and Analysis\r\n        updateAllFromJSONRating: function (jsonrating) {\r\n            log.debug('updateAllFromJSONRating');\r\n            themessage.text('');\r\n            passagebox.html(jsonrating.passage);\r\n\r\n            // Add level stats to the page\r\n            jsonrating.listname=app.opts.listlevels[jsonrating.listid][jsonrating.levelid].listname;\r\n            jsonrating.levelname=app.opts.listlevels[jsonrating.listid][jsonrating.levelid].label;\r\n            templates.render('mod_ogte/levelstatstable', jsonrating).done(function(html, js) {\r\n\r\n                // Update the page.\r\n                levelstats.fadeOut(\"fast\", function() {\r\n                    templates.replaceNodeContents(levelstats, html, js);\r\n                    levelstats.fadeIn(\"fast\");\r\n                }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n\r\n            //add text stats to the page\r\n            var textStatsData = utils.analyzeText(jsonrating.passage);\r\n            templates.render('mod_ogte/textstatstable', textStatsData).done(function(html, js) {\r\n\r\n                    // Update the page.\r\n                articlestats.fadeOut(\"fast\", function() {\r\n                        templates.replaceNodeContents(articlestats, html, js);\r\n                    articlestats.fadeIn(\"fast\");\r\n                    }.bind(this));\r\n\r\n            }.bind(this)).fail(notification.exception);\r\n        },\r\n\r\n        //is the string JSON?\r\n        isJSON:  function (str) {\r\n            try {\r\n                JSON.parse(str);\r\n                return true;\r\n            } catch (e) {\r\n                return false;\r\n            }\r\n        },\r\n\r\n        //Get selected text in the editable div\r\n        getSelectedText:  function () {\r\n            var selectedText = \"\";\r\n            if (window.getSelection) {\r\n                selectedText = window.getSelection().toString();\r\n            } else if (document.selection && document.selection.type !== \"Control\") {\r\n                selectedText = document.selection.createRange().text;\r\n            }\r\n            return selectedText;\r\n        },\r\n\r\n        // Function to update the options in the second dropdown based on the selection in the first dropdown\r\n        updateLevelDropdown: function () {\r\n            const selectedList = listselect.val();\r\n            log.debug('selected list: ' + selectedList);\r\n            // Clear existing options\r\n            levelselect.empty();\r\n\r\n            // Populate options based on the selected category\r\n            app.opts.listlevels[selectedList].forEach(function (option) {\r\n                levelselect.append($('<option value=\"' +option.key+'\">' + option.label+ '</option>'));\r\n            });\r\n            levelselect.prop('selectedIndex', 0);\r\n            hiddenListIdBox.val(selectedList);\r\n            hiddenLevelIdBox.val(levelselect.val());\r\n        },\r\n\r\n        //Register Event Handlers\r\n        registerEvents: function () {\r\n            var that=this;\r\n            addtoIgnoreButton.on('click', function (e) {\r\n                var word = utils.getSelectedWord();\r\n                if (word !== '') {\r\n                    var newignorelist = ignorelist.val() + ' ' + word;\r\n                    ignorelist.val(newignorelist);\r\n                    hiddenIgnoresBox.val(newignorelist);\r\n                    statusmessage.text(app.strings[\"alreadyignored\"] + word);\r\n                    addtoIgnoreButton.hide();\r\n                }\r\n            });\r\n\r\n            //prevent the editable div from creating more divs on copy and paste\r\n            passagebox.on('paste', function (e) {\r\n                e.preventDefault();\r\n                var text = (e.originalEvent || e).clipboardData.getData('text/plain');\r\n                // Insert plain text without additional divs\r\n                $(this).text(text);\r\n                //also update our hidden text box\r\n                hiddenTextBox.val($(this).text());\r\n            });\r\n\r\n            //Add the text to the hidden text box used to submit the form when text is edited\r\n            passagebox.on('input', function (e) {\r\n                var thetext = $(this)[0].innerText;\r\n                hiddenTextBox.val(thetext);\r\n            });\r\n\r\n            passagebox.on('mouseup', function (e) {\r\n                var selectedText = that.getSelectedText();\r\n                if (selectedText === '') {\r\n                    statusmessage.text(app.strings[\"selecttoignore\"]);\r\n                    addtoIgnoreButton.hide();\r\n                    return;\r\n                } else {\r\n                    var word = selectedText.trim();\r\n                    //we only single words\r\n                    if (word.includes(\" \")) {\r\n                        statusmessage.text(app.strings[\"selecttoignore\"]);\r\n                        addtoIgnoreButton.hide();\r\n                        return;\r\n                    }\r\n                    //we only want words that we did not ignore yet\r\n                    var ignores = ignorelist.val();\r\n                    if (ignores.toLowerCase().includes(word.toLowerCase())) {\r\n                        statusmessage.text(app.strings[\"alreadyignored\"] + word);\r\n                        addtoIgnoreButton.hide();\r\n                        return;\r\n                    }\r\n\r\n                    //if we get here its ignorable\r\n                    statusmessage.text(\"\");\r\n                    addtoIgnoreButton.text(app.strings[\"doignore\"] + word);\r\n                    addtoIgnoreButton.data(\"ignore\", word);\r\n                    addtoIgnoreButton.show();\r\n                }\r\n            });\r\n\r\n            //Add the ignores list to the hidden text box used to submit the form when text is edited\r\n            ignorelist.on('change', function (e) {\r\n                hiddenIgnoresBox.val($(this).val());\r\n            });\r\n\r\n            listselect.on('change', function (e) {\r\n                var listid =  $(this).val();\r\n                hiddenListIdBox.val(listid);\r\n                that.updateLevelDropdown();\r\n            });\r\n\r\n            //Level select on change\r\n            levelselect.on('change', function (e) {\r\n                var levelid =  $(this).val();\r\n                hiddenLevelIdBox.val(levelid);\r\n            });\r\n\r\n\r\n            thebutton.on('click', function () {\r\n                //show a spinner\r\n                themessage.html('<i class=\"fa fa-spinner fa-spin fa-sm\"></i>');\r\n\r\n                //get text and clean it up\r\n                //TO DO there will be more cleaning to do.\r\n                var thepassage = passagebox[0].innerText;\r\n\r\n                //no super long readings or empty ones\r\n                if (!thepassage || thepassage.trim() === '') {\r\n                    themessage.text(app.strings['entersomething']);\r\n                    return;\r\n                }\r\n                if (thepassage.length > 5000) {\r\n                    themessage.text(app.strings['texttoolong5000']);\r\n                    return;\r\n                }\r\n                var language = 'en-US';\r\n\r\n                var ignore = ignorelist.val();\r\n                var listid = listselect.val();\r\n                var listlevel = levelselect.val();\r\n                var ogteid=app.opts.ogteid;\r\n\r\n                utils.levelPassage(thepassage, ignore, listid, listlevel, ogteid).then(function (ajaxresult) {\r\n                    var theresponse = JSON.parse(ajaxresult);\r\n                    if (theresponse) {\r\n                        hiddenJSONRatingBox.val(ajaxresult);\r\n                        that.updateAllFromJSONRating(theresponse);\r\n                    } else {\r\n                        log.debug('ajax call to level coverage failed');\r\n                    }\r\n                });//end of level passage\r\n            });//end of click\r\n\r\n        },\r\n\r\n    };\r\n    return app;\r\n\r\n});"],"names":["define","$","log","notification","str","templates","utils","debug","hiddenTextBox","hiddenListIdBox","hiddenLevelIdBox","hiddenIgnoresBox","hiddenJSONRatingBox","passagebox","levelstats","articlestats","themessage","thebutton","listselect","levelselect","addtoIgnoreButton","ignorelist","statusmessage","app","strings","opts","init","props","theid","optsid","configcontrol","get","JSON","parse","value","remove","init_strings","registerEvents","jsonrating_string","val","this","isJSON","jsonrating","hasOwnProperty","updateAllFromJSONRating","listid","levelid","updateLevelDropdown","ignores","that","strs","key","thestring","get_string","done","s","get_strings","i","alreadyignored","selecttoignore","doignore","entersomething","texttoolong5000","text","html","passage","listname","listlevels","levelname","label","render","js","fadeOut","replaceNodeContents","fadeIn","bind","fail","exception","textStatsData","analyzeText","e","getSelectedText","selectedText","window","getSelection","toString","document","selection","type","createRange","selectedList","empty","forEach","option","append","prop","on","word","getSelectedWord","newignorelist","hide","preventDefault","originalEvent","clipboardData","getData","thetext","innerText","trim","includes","toLowerCase","data","show","thepassage","length","ignore","listlevel","ogteid","levelPassage","then","ajaxresult","theresponse"],"mappings":"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"}